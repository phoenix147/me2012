/*
* generated by Xtext
*/
grammar InternalGSMLDsl;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package at.ac.tuwien.big.me12.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package at.ac.tuwien.big.me12.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import at.ac.tuwien.big.me12.services.GSMLDslGrammarAccess;

}

@parser::members {
 
 	private GSMLDslGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(GSMLDslGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleGradingSystem
entryRuleGradingSystem 
:
{ before(grammarAccess.getGradingSystemRule()); }
	 ruleGradingSystem
{ after(grammarAccess.getGradingSystemRule()); } 
	 EOF 
;

// Rule GradingSystem
ruleGradingSystem
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGradingSystemAccess().getCoursesAssignment()); }
(rule__GradingSystem__CoursesAssignment)*
{ after(grammarAccess.getGradingSystemAccess().getCoursesAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCourse
entryRuleCourse 
:
{ before(grammarAccess.getCourseRule()); }
	 ruleCourse
{ after(grammarAccess.getCourseRule()); } 
	 EOF 
;

// Rule Course
ruleCourse
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCourseAccess().getGroup()); }
(rule__Course__Group__0)
{ after(grammarAccess.getCourseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGrading
entryRuleGrading 
:
{ before(grammarAccess.getGradingRule()); }
	 ruleGrading
{ after(grammarAccess.getGradingRule()); } 
	 EOF 
;

// Rule Grading
ruleGrading
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGradingAccess().getGroup()); }
(rule__Grading__Group__0)
{ after(grammarAccess.getGradingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGradingScheme
entryRuleGradingScheme 
:
{ before(grammarAccess.getGradingSchemeRule()); }
	 ruleGradingScheme
{ after(grammarAccess.getGradingSchemeRule()); } 
	 EOF 
;

// Rule GradingScheme
ruleGradingScheme
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGradingSchemeAccess().getGroup()); }
(rule__GradingScheme__Group__0)
{ after(grammarAccess.getGradingSchemeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGrade
entryRuleGrade 
:
{ before(grammarAccess.getGradeRule()); }
	 ruleGrade
{ after(grammarAccess.getGradeRule()); } 
	 EOF 
;

// Rule Grade
ruleGrade
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGradeAccess().getGroup()); }
(rule__Grade__Group__0)
{ after(grammarAccess.getGradeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTask
entryRuleTask 
:
{ before(grammarAccess.getTaskRule()); }
	 ruleTask
{ after(grammarAccess.getTaskRule()); } 
	 EOF 
;

// Rule Task
ruleTask
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTaskAccess().getAlternatives()); }
(rule__Task__Alternatives)
{ after(grammarAccess.getTaskAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConcreteTask
entryRuleConcreteTask 
:
{ before(grammarAccess.getConcreteTaskRule()); }
	 ruleConcreteTask
{ after(grammarAccess.getConcreteTaskRule()); } 
	 EOF 
;

// Rule ConcreteTask
ruleConcreteTask
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConcreteTaskAccess().getGroup()); }
(rule__ConcreteTask__Group__0)
{ after(grammarAccess.getConcreteTaskAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTaskGroup
entryRuleTaskGroup 
:
{ before(grammarAccess.getTaskGroupRule()); }
	 ruleTaskGroup
{ after(grammarAccess.getTaskGroupRule()); } 
	 EOF 
;

// Rule TaskGroup
ruleTaskGroup
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTaskGroupAccess().getGroup()); }
(rule__TaskGroup__Group__0)
{ after(grammarAccess.getTaskGroupAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMinRequirement
entryRuleMinRequirement 
:
{ before(grammarAccess.getMinRequirementRule()); }
	 ruleMinRequirement
{ after(grammarAccess.getMinRequirementRule()); } 
	 EOF 
;

// Rule MinRequirement
ruleMinRequirement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMinRequirementAccess().getGroup()); }
(rule__MinRequirement__Group__0)
{ after(grammarAccess.getMinRequirementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule MinRequirementsType
ruleMinRequirementsType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinRequirementsTypeAccess().getAlternatives()); }
(rule__MinRequirementsType__Alternatives)
{ after(grammarAccess.getMinRequirementsTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Task__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getConcreteTaskParserRuleCall_0()); }
	ruleConcreteTask
{ after(grammarAccess.getTaskAccess().getConcreteTaskParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTaskAccess().getTaskGroupParserRuleCall_1()); }
	ruleTaskGroup
{ after(grammarAccess.getTaskAccess().getTaskGroupParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MinRequirementsType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinRequirementsTypeAccess().getAbsoluteEnumLiteralDeclaration_0()); }
(	'point(s)' 
)
{ after(grammarAccess.getMinRequirementsTypeAccess().getAbsoluteEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getMinRequirementsTypeAccess().getPercentageEnumLiteralDeclaration_1()); }
(	'%' 
)
{ after(grammarAccess.getMinRequirementsTypeAccess().getPercentageEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Course__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Course__Group__0__Impl
	rule__Course__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Course__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCourseAccess().getCourseKeyword_0()); }

	'course' 

{ after(grammarAccess.getCourseAccess().getCourseKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Course__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Course__Group__1__Impl
	rule__Course__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Course__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCourseAccess().getNameAssignment_1()); }
(rule__Course__NameAssignment_1)
{ after(grammarAccess.getCourseAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Course__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Course__Group__2__Impl
	rule__Course__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Course__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCourseAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getCourseAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Course__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Course__Group__3__Impl
	rule__Course__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Course__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCourseAccess().getGradingsAssignment_3()); }
(rule__Course__GradingsAssignment_3)*
{ after(grammarAccess.getCourseAccess().getGradingsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Course__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Course__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Course__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCourseAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getCourseAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Grading__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Grading__Group__0__Impl
	rule__Grading__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Grading__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGradingAccess().getSemesterKeyword_0()); }

	'semester' 

{ after(grammarAccess.getGradingAccess().getSemesterKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Grading__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Grading__Group__1__Impl
	rule__Grading__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Grading__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGradingAccess().getSemesterAssignment_1()); }
(rule__Grading__SemesterAssignment_1)
{ after(grammarAccess.getGradingAccess().getSemesterAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Grading__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Grading__Group__2__Impl
	rule__Grading__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Grading__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGradingAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getGradingAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Grading__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Grading__Group__3__Impl
	rule__Grading__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Grading__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGradingAccess().getGradingSchemeAssignment_3()); }
(rule__Grading__GradingSchemeAssignment_3)
{ after(grammarAccess.getGradingAccess().getGradingSchemeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Grading__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Grading__Group__4__Impl
	rule__Grading__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Grading__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getGradingAccess().getTasksAssignment_4()); }
(rule__Grading__TasksAssignment_4)
{ after(grammarAccess.getGradingAccess().getTasksAssignment_4()); }
)
(
{ before(grammarAccess.getGradingAccess().getTasksAssignment_4()); }
(rule__Grading__TasksAssignment_4)*
{ after(grammarAccess.getGradingAccess().getTasksAssignment_4()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Grading__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Grading__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Grading__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGradingAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getGradingAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__GradingScheme__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GradingScheme__Group__0__Impl
	rule__GradingScheme__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GradingScheme__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGradingSchemeAccess().getGradingSchemeKeyword_0()); }

	'grading scheme' 

{ after(grammarAccess.getGradingSchemeAccess().getGradingSchemeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GradingScheme__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GradingScheme__Group__1__Impl
	rule__GradingScheme__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GradingScheme__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGradingSchemeAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getGradingSchemeAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GradingScheme__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GradingScheme__Group__2__Impl
	rule__GradingScheme__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GradingScheme__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGradingSchemeAccess().getMinRequirementNotFulfilledGradeAssignment_2()); }
(rule__GradingScheme__MinRequirementNotFulfilledGradeAssignment_2)
{ after(grammarAccess.getGradingSchemeAccess().getMinRequirementNotFulfilledGradeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GradingScheme__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GradingScheme__Group__3__Impl
	rule__GradingScheme__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GradingScheme__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGradingSchemeAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getGradingSchemeAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GradingScheme__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GradingScheme__Group__4__Impl
	rule__GradingScheme__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__GradingScheme__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGradingSchemeAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getGradingSchemeAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GradingScheme__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GradingScheme__Group__5__Impl
	rule__GradingScheme__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__GradingScheme__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getGradingSchemeAccess().getGradesAssignment_5()); }
(rule__GradingScheme__GradesAssignment_5)
{ after(grammarAccess.getGradingSchemeAccess().getGradesAssignment_5()); }
)
(
{ before(grammarAccess.getGradingSchemeAccess().getGradesAssignment_5()); }
(rule__GradingScheme__GradesAssignment_5)*
{ after(grammarAccess.getGradingSchemeAccess().getGradesAssignment_5()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GradingScheme__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GradingScheme__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GradingScheme__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGradingSchemeAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getGradingSchemeAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Grade__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Grade__Group__0__Impl
	rule__Grade__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Grade__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGradeAccess().getNameAssignment_0()); }
(rule__Grade__NameAssignment_0)
{ after(grammarAccess.getGradeAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Grade__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Grade__Group__1__Impl
	rule__Grade__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Grade__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGradeAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getGradeAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Grade__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Grade__Group__2__Impl
	rule__Grade__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Grade__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGradeAccess().getRequiredPointsAssignment_2()); }
(rule__Grade__RequiredPointsAssignment_2)
{ after(grammarAccess.getGradeAccess().getRequiredPointsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Grade__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Grade__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Grade__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGradeAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getGradeAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ConcreteTask__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConcreteTask__Group__0__Impl
	rule__ConcreteTask__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteTask__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcreteTaskAccess().getNameAssignment_0()); }
(rule__ConcreteTask__NameAssignment_0)
{ after(grammarAccess.getConcreteTaskAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConcreteTask__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConcreteTask__Group__1__Impl
	rule__ConcreteTask__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteTask__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcreteTaskAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getConcreteTaskAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConcreteTask__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConcreteTask__Group__2__Impl
	rule__ConcreteTask__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteTask__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcreteTaskAccess().getMaxPointsAssignment_2()); }
(rule__ConcreteTask__MaxPointsAssignment_2)
{ after(grammarAccess.getConcreteTaskAccess().getMaxPointsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConcreteTask__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConcreteTask__Group__3__Impl
	rule__ConcreteTask__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteTask__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcreteTaskAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getConcreteTaskAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConcreteTask__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConcreteTask__Group__4__Impl
	rule__ConcreteTask__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteTask__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcreteTaskAccess().getGroup_4()); }
(rule__ConcreteTask__Group_4__0)?
{ after(grammarAccess.getConcreteTaskAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConcreteTask__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConcreteTask__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteTask__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcreteTaskAccess().getSemicolonKeyword_5()); }

	';' 

{ after(grammarAccess.getConcreteTaskAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ConcreteTask__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConcreteTask__Group_4__0__Impl
	rule__ConcreteTask__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteTask__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcreteTaskAccess().getColonKeyword_4_0()); }

	':' 

{ after(grammarAccess.getConcreteTaskAccess().getColonKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConcreteTask__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConcreteTask__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteTask__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcreteTaskAccess().getMinRequirementAssignment_4_1()); }
(rule__ConcreteTask__MinRequirementAssignment_4_1)
{ after(grammarAccess.getConcreteTaskAccess().getMinRequirementAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TaskGroup__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskGroup__Group__0__Impl
	rule__TaskGroup__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskGroup__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskGroupAccess().getNameAssignment_0()); }
(rule__TaskGroup__NameAssignment_0)
{ after(grammarAccess.getTaskGroupAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskGroup__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskGroup__Group__1__Impl
	rule__TaskGroup__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskGroup__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskGroupAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getTaskGroupAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskGroup__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskGroup__Group__2__Impl
	rule__TaskGroup__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskGroup__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTaskGroupAccess().getContainsAssignment_2()); }
(rule__TaskGroup__ContainsAssignment_2)
{ after(grammarAccess.getTaskGroupAccess().getContainsAssignment_2()); }
)
(
{ before(grammarAccess.getTaskGroupAccess().getContainsAssignment_2()); }
(rule__TaskGroup__ContainsAssignment_2)*
{ after(grammarAccess.getTaskGroupAccess().getContainsAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskGroup__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskGroup__Group__3__Impl
	rule__TaskGroup__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskGroup__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskGroupAccess().getGroup_3()); }
(rule__TaskGroup__Group_3__0)?
{ after(grammarAccess.getTaskGroupAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskGroup__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskGroup__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskGroup__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskGroupAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getTaskGroupAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__TaskGroup__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskGroup__Group_3__0__Impl
	rule__TaskGroup__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskGroup__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskGroupAccess().getAllKeyword_3_0()); }

	'@all' 

{ after(grammarAccess.getTaskGroupAccess().getAllKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskGroup__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskGroup__Group_3__1__Impl
	rule__TaskGroup__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskGroup__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskGroupAccess().getColonKeyword_3_1()); }

	':' 

{ after(grammarAccess.getTaskGroupAccess().getColonKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskGroup__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskGroup__Group_3__2__Impl
	rule__TaskGroup__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskGroup__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskGroupAccess().getMinRequirementAssignment_3_2()); }
(rule__TaskGroup__MinRequirementAssignment_3_2)
{ after(grammarAccess.getTaskGroupAccess().getMinRequirementAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskGroup__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskGroup__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskGroup__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskGroupAccess().getSemicolonKeyword_3_3()); }

	';' 

{ after(grammarAccess.getTaskGroupAccess().getSemicolonKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MinRequirement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MinRequirement__Group__0__Impl
	rule__MinRequirement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MinRequirement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinRequirementAccess().getMinKeyword_0()); }

	'min' 

{ after(grammarAccess.getMinRequirementAccess().getMinKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MinRequirement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MinRequirement__Group__1__Impl
	rule__MinRequirement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MinRequirement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinRequirementAccess().getValueAssignment_1()); }
(rule__MinRequirement__ValueAssignment_1)
{ after(grammarAccess.getMinRequirementAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MinRequirement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MinRequirement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MinRequirement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinRequirementAccess().getTypeAssignment_2()); }
(rule__MinRequirement__TypeAssignment_2)
{ after(grammarAccess.getMinRequirementAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__GradingSystem__CoursesAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGradingSystemAccess().getCoursesCourseParserRuleCall_0()); }
	ruleCourse{ after(grammarAccess.getGradingSystemAccess().getCoursesCourseParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Course__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCourseAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getCourseAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Course__GradingsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCourseAccess().getGradingsGradingParserRuleCall_3_0()); }
	ruleGrading{ after(grammarAccess.getCourseAccess().getGradingsGradingParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Grading__SemesterAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGradingAccess().getSemesterIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getGradingAccess().getSemesterIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Grading__GradingSchemeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGradingAccess().getGradingSchemeGradingSchemeParserRuleCall_3_0()); }
	ruleGradingScheme{ after(grammarAccess.getGradingAccess().getGradingSchemeGradingSchemeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Grading__TasksAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGradingAccess().getTasksTaskParserRuleCall_4_0()); }
	ruleTask{ after(grammarAccess.getGradingAccess().getTasksTaskParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GradingScheme__MinRequirementNotFulfilledGradeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGradingSchemeAccess().getMinRequirementNotFulfilledGradeGradeCrossReference_2_0()); }
(
{ before(grammarAccess.getGradingSchemeAccess().getMinRequirementNotFulfilledGradeGradeIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getGradingSchemeAccess().getMinRequirementNotFulfilledGradeGradeIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getGradingSchemeAccess().getMinRequirementNotFulfilledGradeGradeCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GradingScheme__GradesAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGradingSchemeAccess().getGradesGradeParserRuleCall_5_0()); }
	ruleGrade{ after(grammarAccess.getGradingSchemeAccess().getGradesGradeParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Grade__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGradeAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getGradeAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Grade__RequiredPointsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGradeAccess().getRequiredPointsINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getGradeAccess().getRequiredPointsINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteTask__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcreteTaskAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getConcreteTaskAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteTask__MaxPointsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcreteTaskAccess().getMaxPointsINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getConcreteTaskAccess().getMaxPointsINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteTask__MinRequirementAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcreteTaskAccess().getMinRequirementMinRequirementParserRuleCall_4_1_0()); }
	ruleMinRequirement{ after(grammarAccess.getConcreteTaskAccess().getMinRequirementMinRequirementParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TaskGroup__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskGroupAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getTaskGroupAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TaskGroup__ContainsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskGroupAccess().getContainsTaskParserRuleCall_2_0()); }
	ruleTask{ after(grammarAccess.getTaskGroupAccess().getContainsTaskParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TaskGroup__MinRequirementAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskGroupAccess().getMinRequirementMinRequirementParserRuleCall_3_2_0()); }
	ruleMinRequirement{ after(grammarAccess.getTaskGroupAccess().getMinRequirementMinRequirementParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MinRequirement__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinRequirementAccess().getValueINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getMinRequirementAccess().getValueINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MinRequirement__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMinRequirementAccess().getTypeMinRequirementsTypeEnumRuleCall_2_0()); }
	ruleMinRequirementsType{ after(grammarAccess.getMinRequirementAccess().getTypeMinRequirementsTypeEnumRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


